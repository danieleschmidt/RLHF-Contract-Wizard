# RLHF-Contract-Wizard Production Deployment Configuration
# Generated by TERRAGON SDLC MASTER PROMPT v4.0 - AUTONOMOUS EXECUTION
# ========================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: rlhf-contract-config
  namespace: quantum-planner
data:
  # Application Configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  DEBUG: "false"
  
  # Database Configuration
  DATABASE_POOL_SIZE: "20"
  DATABASE_MAX_OVERFLOW: "10"
  DATABASE_POOL_TIMEOUT: "30"
  DATABASE_POOL_RECYCLE: "3600"
  
  # Redis Configuration
  REDIS_MAX_CONNECTIONS: "100"
  REDIS_CONNECTION_TIMEOUT: "5"
  REDIS_SOCKET_TIMEOUT: "5"
  
  # Performance Configuration
  MAX_WORKERS: "8"
  WORKER_TIMEOUT: "120"
  KEEP_ALIVE: "2"
  MAX_REQUESTS: "1000"
  MAX_REQUESTS_JITTER: "50"
  
  # Security Configuration
  SESSION_TIMEOUT: "3600"
  TOKEN_EXPIRY: "7200"
  MAX_LOGIN_ATTEMPTS: "5"
  RATE_LIMIT_PER_MINUTE: "1000"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
  PROMETHEUS_PORT: "9090"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rlhf-contract-api
  namespace: quantum-planner
  labels:
    app: rlhf-contract
    component: api
    version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: rlhf-contract
      component: api
  template:
    metadata:
      labels:
        app: rlhf-contract
        component: api
        version: "1.0.0"
    spec:
      containers:
      - name: api
        image: rlhf-contract:1.0.0
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rlhf-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: rlhf-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: rlhf-secrets
              key: secret-key
        envFrom:
        - configMapRef:
            name: rlhf-contract-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: rlhf-contract-service
  namespace: quantum-planner
  labels:
    app: rlhf-contract
    component: api
spec:
  selector:
    app: rlhf-contract
    component: api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rlhf-contract-ingress
  namespace: quantum-planner
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "60s"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.rlhf-contracts.org
    secretName: rlhf-tls-secret
  rules:
  - host: api.rlhf-contracts.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rlhf-contract-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rlhf-contract-hpa
  namespace: quantum-planner
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rlhf-contract-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: rlhf-contract-pdb
  namespace: quantum-planner
spec:
  selector:
    matchLabels:
      app: rlhf-contract
      component: api
  minAvailable: 2

---
apiVersion: v1
kind: Secret
metadata:
  name: rlhf-secrets
  namespace: quantum-planner
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BkYi5leGFtcGxlLmNvbS9ybGhmX2NvbnRyYWN0cw==
  redis-url: cmVkaXM6Ly9yZWRpcy5leGFtcGxlLmNvbTo2Mzc5LzA=
  secret-key: c3VwZXJfc2VjcmV0X2tleV9jaGFuZ2VfbWVfaW5fcHJvZHVjdGlvbg==

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rlhf-contract-metrics
  namespace: quantum-planner
  labels:
    app: rlhf-contract
spec:
  selector:
    matchLabels:
      app: rlhf-contract
      component: api
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rlhf-contract-cleanup
  namespace: quantum-planner
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cleanup
            image: rlhf-contract:1.0.0
            command: ["/app/cleanup.py"]
            env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: rlhf-secrets
                  key: database-url
            envFrom:
            - configMapRef:
                name: rlhf-contract-config
          restartPolicy: OnFailure

---
# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rlhf-contract-netpol
  namespace: quantum-planner
spec:
  podSelector:
    matchLabels:
      app: rlhf-contract
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 443   # HTTPS outbound
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS